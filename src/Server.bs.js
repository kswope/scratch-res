// Generated by ReScript, PLEASE EDIT WITH CARE
'use strict';

var Pg = require("pg");
var Curry = require("rescript/lib/js/curry.js");
var Polka = require("rescript-polka/src/Polka.bs.js");
var Polka$1 = require("polka");
var Dotenv = require("dotenv");
var AppData = require("./app/AppData.bs.js");
var DalUser = require("./dal/DalUser.bs.js");
var Js_dict = require("rescript/lib/js/js_dict.js");

var app = Polka$1();

Dotenv.config();

var pool = new Pg.Pool();

var app$1 = app.use(function (_req, _res, next) {
      Curry._1(next, undefined);
    });

function logger(req, _res, next) {
  console.log("~> Received " + req.method + " on " + req.url + "");
  return Curry._1(next, undefined);
}

var app$2 = app$1.use(logger);

AppData.userBookmarkData(new Pg.Pool(), "1");

var app$3 = app$2.get("/api/data", (function (_req, res) {
        AppData.userBookmarkData(pool, "1").then(function (data) {
              Polka.jsonEnd(res, {
                    data: data
                  });
            });
      }));

var app$4 = app$3.get("/user/:id", (function (req, res) {
        var id = Js_dict.get(req.params, "id");
        if (id !== undefined) {
          DalUser.get(new Pg.Pool(), id).then(function (user) {
                if (user !== undefined) {
                  return Polka.jsonEnd(res, {
                              user: user
                            });
                } else {
                  return Polka.jsonEnd(res, {
                              error: "user not found"
                            });
                }
              });
          return ;
        } else {
          return Polka.jsonEnd(res, {
                      error: "missing id"
                    });
        }
      }));

function start(param) {
  app$4.listen(3000, (function (param) {
          console.log("starting server");
        }));
}

exports.pool = pool;
exports.logger = logger;
exports.app = app$4;
exports.start = start;
/* app Not a pure module */
